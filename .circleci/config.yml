# Note: YAML anchors allow an object to be re-used, reducing duplication. The ampersand
# declares an alias for an object, then later the `<<: *alias` syntax dereferences it.
#
# See http://blog.daemonl.com/2016/02/yaml.html and
# https://medium.com/@kinghuang/docker-compose-anchors-aliases-extensions-a1e4105d70bd
# for more information about how to use anchors.
#
# To validate changes use an online parser, eg. http://yaml-online-parser.appspot.com/
anchors:
  container-config: &container-config
    docker:
      - image: circleci/node:12.14.1

  load-cache: &load-cache
    restore_cache:
      key: dependency-cache-{{ checksum "package-lock.json" }}

  configure-aws-access: &configure-aws-access
    run:
      name: Configure AWS access
      command: |
        mkdir -p ~/.aws
        cat > ~/.aws/credentials \<< EOL
        [manwaring]
        aws_access_key_id = $AWS_ACCESS_KEY
        aws_secret_access_key = $AWS_SECRET_ACCESS_KEY
        EOL

  only-branches: &only-branches
    filters:
      branches:
        ignore: master

  only-master: &only-master
    filters:
      branches:
        only: master

  branch-config: &branch-config
    environment:
      - KEY: AWS_ACCESS_KEY_ID
      - SECRET: AWS_SECRET_ACCESS_KEY

  automation-config: &automation-config
    environment:
      - KEY: AWS_ACCESS_KEY_ID
      - SECRET: AWS_SECRET_ACCESS_KEY
      - STAGE: automation

  deploy: &deploy
    <<: *container-config
    steps:
      - checkout
      - *load-cache
      - *configure-aws-access
      - run:
          name: Deploy stack
          command: |

            [[ ! -z "$STAGE" ]] || STAGE=${CIRCLE_BRANCH%%/*}
            echo Deploying Odin for stage $STAGE
            npm run deploy -- --stage $STAGE
      - persist_to_workspace:
          root: .
          paths:
            - infrastructure

## Circle CI configuration, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1
jobs:
  install:
    <<: *container-config
    steps:
      - checkout
      - *load-cache
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  test:
    <<: *container-config
    steps:
      - checkout
      - *load-cache
      - run:
          name: Test
          command: npm test
      - store_artifacts:
          path: coverage
      - run:
          name: Send coverage to Codecov
          command: npm run codecov

  deploy:
    description: Deploy to the specified stage
    <<: *container-config
    parameters:
      stage:
        description: Stage to deploy to
        type: string
        default: ''
    steps:
      - checkout
      - *load-cache
      - *configure-aws-access
      - run:
          name: Deploy
          command: |
            STAGE=<< parameters.stage >>
            [[ ! -z "$STAGE" ]] || STAGE=${CIRCLE_BRANCH%%/*}
            echo Deploying to stage $STAGE
            npm run deploy -- --stage $STAGE

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - install
      - test:
          requires: [install]
      - deploy:
          name: deploy-branch
          <<: *only-branches
          context: manwaring-aws
          requires: [test]
      - deploy:
          name: deploy-master
          <<: *only-master
          stage: automation
          context: manwaring-aws
          requires: [test]
